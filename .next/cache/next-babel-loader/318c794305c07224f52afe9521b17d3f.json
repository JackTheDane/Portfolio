{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projekter\\\\PortfolioSSG\\\\pages\\\\blog\\\\[slug].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fs from 'fs';\nimport path from 'path';\n\nconst Post = ({\n  contents\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \" Contents below \"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \" \", contents, \" \"));\n};\n/**\r\n * This is used to determine the paths during export\r\n */\n\n\nexport const getStaticPaths = async () => {\n  // Get all of the file names from the \"posts\" folder\n  const files = fs.readdirSync('posts');\n  console.log({\n    files\n  });\n  return {\n    // Create a route for each md file\n    paths: files.map(filename => ({\n      params: {\n        // Set the params for each file\n        slug: filename.replace('.md', '') // Set the slug of the file to be the filename without the .md extension\n\n      }\n    })),\n    fallback: false\n  };\n};\n/**\r\n * Used to set the props for the page during export.\r\n * Anything set here will be passed as props to the component during export.\r\n */\n\nexport const getStaticProps = async ({\n  params: {\n    slug\n  }\n}) => {\n  // Get the contents of the md file by checking for it using the file name + the .md extension\n  const contents = fs.readFileSync(path.join('posts', `${slug}.md`)).toString();\n  return {\n    // Anything passed to the \"props\" object will be passed to the component as props.\n    props: {\n      contents\n    }\n  };\n};\nexport default Post;","map":{"version":3,"sources":["F:/Projekter/PortfolioSSG/pages/blog/[slug].tsx"],"names":["React","fs","path","Post","contents","getStaticPaths","files","readdirSync","console","log","paths","map","filename","params","slug","replace","fallback","getStaticProps","readFileSync","join","toString","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAIA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA;AADY,CAAD,KAEP;AACJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,QAAP,MAFF,CADF;AAMD,CATD;AAWA;;;;;AAGA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAExC;AACA,QAAMC,KAAK,GAAGL,EAAE,CAACM,WAAH,CAAe,OAAf,CAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AAEA,SAAO;AACL;AACAI,IAAAA,KAAK,EAAEJ,KAAK,CAACK,GAAN,CAAWC,QAAD,KAAuB;AACtCC,MAAAA,MAAM,EAAE;AAAE;AACRC,QAAAA,IAAI,EAAEF,QAAQ,CAACG,OAAT,CAAiB,KAAjB,EAAwB,EAAxB,CADA,CAC4B;;AAD5B;AAD8B,KAAvB,CAAV,CAFF;AAOLC,IAAAA,QAAQ,EAAE;AAPL,GAAP;AASD,CAhBM;AAmBP;;;;;AAIA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEJ,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAAP,KAAgC;AAE5D;AACA,QAAMV,QAAQ,GAAGH,EAAE,CAACiB,YAAH,CAAgBhB,IAAI,CAACiB,IAAL,CAAU,OAAV,EAAoB,GAAEL,IAAK,KAA3B,CAAhB,EAAkDM,QAAlD,EAAjB;AAGA,SAAO;AACL;AACAC,IAAAA,KAAK,EAAE;AACLjB,MAAAA;AADK;AAFF,GAAP;AAMD,CAZM;AAcP,eAAeD,IAAf","sourcesContent":["import React from 'react';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\n\r\n\r\nconst Post = ({\r\n  contents\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div> Contents below </div>\r\n      <pre> {contents} </pre>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * This is used to determine the paths during export\r\n */\r\nexport const getStaticPaths = async () => {\r\n\r\n  // Get all of the file names from the \"posts\" folder\r\n  const files = fs.readdirSync('posts');\r\n\r\n  console.log({ files });\r\n\r\n  return {\r\n    // Create a route for each md file\r\n    paths: files.map((filename: string) => ({\r\n      params: { // Set the params for each file\r\n        slug: filename.replace('.md', '') // Set the slug of the file to be the filename without the .md extension\r\n      }\r\n    })),\r\n    fallback: false\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Used to set the props for the page during export.\r\n * Anything set here will be passed as props to the component during export.\r\n */\r\nexport const getStaticProps = async ({ params: { slug } }) => {\r\n\r\n  // Get the contents of the md file by checking for it using the file name + the .md extension\r\n  const contents = fs.readFileSync(path.join('posts', `${slug}.md`)).toString();\r\n\r\n\r\n  return {\r\n    // Anything passed to the \"props\" object will be passed to the component as props.\r\n    props: {\r\n      contents\r\n    }\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}