{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projekter\\\\PortfolioSSG\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fs from \"fs\";\nimport matter from 'gray-matter';\nimport path from 'path';\n\nconst Home = ({\n  posts\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, posts.map(({\n    slug,\n    title\n  }) => __jsx(\"div\", {\n    key: slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/blog/[slug]\",\n    as: `/blog/${slug}` //href=\"/blog/faq\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, title)))));\n};\n\nexport const getStaticProps = async () => {\n  // Get the content of the md file by checking for it using the file name + the .md extension\n  const postFileNames = fs.readdirSync('posts');\n  const posts = await Promise.all(postFileNames.map(fn => new Promise((res, rej) => {\n    const markdownWithMetadata = fs.readFile(path.join('posts', fn), (err, data) => {\n      if (err) {\n        rej(err);\n        return;\n      }\n\n      const {\n        data: {\n          title\n        }\n      } = matter(data.toString());\n      res({\n        title,\n        slug: fn.replace('.md', '')\n      });\n    });\n  })));\n  return {\n    // Anything passed to the \"props\" object will be passed to the component as props.\n    props: {\n      posts\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["F:/Projekter/PortfolioSSG/pages/index.tsx"],"names":["Link","fs","matter","path","Home","posts","map","slug","title","getStaticProps","postFileNames","readdirSync","Promise","all","fn","res","rej","markdownWithMetadata","readFile","join","err","data","toString","replace","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;;AAWA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA;AADY,CAAD,KAEK;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,CAACC,GAAN,CAAU,CAAC;AACTC,IAAAA,IADS;AAETC,IAAAA;AAFS,GAAD,KAIN;AAAK,IAAA,GAAG,EAAED,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,cADP;AACsB,IAAA,EAAE,EAAG,SAAQA,IAAK,EADxC,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAJ,CAJF,CADF,CAJJ,CAFJ,CADF;AAmBD,CAtBD;;AAwBA,OAAO,MAAMC,cAA0C,GAAG,YAAY;AACpE;AACA,QAAMC,aAAuB,GAAGT,EAAE,CAACU,WAAH,CAAe,OAAf,CAAhC;AAEA,QAAMN,KAAc,GAAG,MAAMO,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACJ,GAAd,CACtCQ,EAAD,IAAwB,IAAIF,OAAJ,CAAmB,CAACG,GAAD,EAAMC,GAAN,KAAc;AAEvD,UAAMC,oBAAoB,GAAGhB,EAAE,CAACiB,QAAH,CAAYf,IAAI,CAACgB,IAAL,CAAU,OAAV,EAAmBL,EAAnB,CAAZ,EAAoC,CAACM,GAAD,EAAMC,IAAN,KAAe;AAE9E,UAAID,GAAJ,EAAS;AACPJ,QAAAA,GAAG,CAACI,GAAD,CAAH;AACA;AACD;;AAED,YAAM;AAAEC,QAAAA,IAAI,EAAE;AAAEb,UAAAA;AAAF;AAAR,UAAsBN,MAAM,CAACmB,IAAI,CAACC,QAAL,EAAD,CAAlC;AAEAP,MAAAA,GAAG,CAAC;AACFP,QAAAA,KADE;AAEFD,QAAAA,IAAI,EAAEO,EAAE,CAACS,OAAH,CAAW,KAAX,EAAkB,EAAlB;AAFJ,OAAD,CAAH;AAID,KAb4B,CAA7B;AAeD,GAjBuB,CADe,CAAZ,CAA7B;AAqBA,SAAO;AACL;AACAC,IAAAA,KAAK,EAAE;AACLnB,MAAAA;AADK;AAFF,GAAP;AAMD,CA/BM;AAkCP,eAAeD,IAAf","sourcesContent":["import Link from 'next/link';\r\nimport fs from \"fs\";\r\nimport matter from 'gray-matter';\r\nimport { GetStaticProps } from 'next';\r\nimport path from 'path';\r\n\r\ninterface IPost {\r\n  slug: string;\r\n  title: string;\r\n}\r\n\r\ninterface IHomeProps {\r\n  posts: IPost[]\r\n}\r\n\r\nconst Home = ({\r\n  posts\r\n}: IHomeProps) => {\r\n  return (\r\n    <div>\r\n      {\r\n        posts.map(({\r\n          slug,\r\n          title\r\n        }) => (\r\n            <div key={slug}>\r\n              <Link\r\n                href=\"/blog/[slug]\" as={`/blog/${slug}`}\r\n              //href=\"/blog/faq\"\r\n              >\r\n                <a>{title}</a>\r\n              </Link>\r\n            </div>\r\n          ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps<IHomeProps> = async () => {\r\n  // Get the content of the md file by checking for it using the file name + the .md extension\r\n  const postFileNames: string[] = fs.readdirSync('posts');\r\n\r\n  const posts: IPost[] = await Promise.all(postFileNames.map(\r\n    (fn): Promise<IPost> => new Promise<IPost>((res, rej) => {\r\n\r\n      const markdownWithMetadata = fs.readFile(path.join('posts', fn), (err, data) => {\r\n\r\n        if (err) {\r\n          rej(err);\r\n          return;\r\n        }\r\n\r\n        const { data: { title } } = matter(data.toString());\r\n\r\n        res({\r\n          title,\r\n          slug: fn.replace('.md', '')\r\n        });\r\n      });\r\n\r\n    })\r\n  ))\r\n\r\n  return {\r\n    // Anything passed to the \"props\" object will be passed to the component as props.\r\n    props: {\r\n      posts\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}